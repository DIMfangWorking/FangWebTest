[2015-09-10 11:29:15.104] [INFO] master - register url : /master method : POST process : function
[2015-09-10 11:29:15.107] [INFO] master - register url : /front/resource method : GET process : function
[2015-09-10 11:29:15.107] [INFO] master - register url : /front/task method : POST process : function
[2015-09-10 11:29:15.108] [INFO] master - register url : /front/task/:task_id method : GET process : function
[2015-09-10 11:29:15.108] [INFO] master - register url : /front/task/:task_id/:log_id method : GET process : function
[2015-09-10 11:29:15.108] [INFO] master - register url : /front/user/login method : POST process : function
[2015-09-10 11:29:15.108] [INFO] master - register url : /front/user/logout/:xwsessionid method : POST process : function
[2015-09-10 11:29:15.108] [INFO] master - register url : /front/user/:id method : GET process : function
[2015-09-10 11:29:15.109] [INFO] master - register url : /front/user/:id method : DELETE process : function
[2015-09-10 11:29:15.111] [INFO] master - master start
[2015-09-10 11:29:15.123] [INFO] master - mongoose connected
[2015-09-10 11:29:15.127] [INFO] master - mongoose connect
[2015-09-10 11:30:49.870] [INFO] master - master start
[2015-09-10 11:30:49.884] [INFO] master - mongoose connected
[2015-09-10 11:30:49.888] [INFO] master - mongoose connect
[2015-09-11 01:43:25.652] [INFO] master - master start
[2015-09-11 01:43:25.663] [ERROR] master - save resource error. [Error: document must have an _id before saving]
Error: document must have an _id before saving
    at null._onTimeout (/home/node_modules/mongoose/lib/model.js:112:18)
    at Timer.listOnTimeout (timers.js:119:15)
[2015-09-11 01:43:25.721] [INFO] master - mongoose connected
[2015-09-11 01:43:25.722] [INFO] master - mongoose connect
[2015-09-11 01:44:35.656] [INFO] master - master start
[2015-09-11 01:44:35.674] [INFO] master - mongoose connected
[2015-09-11 01:44:35.681] [INFO] master - mongoose connect
[2015-09-11 01:50:48.871] [INFO] master - master start
[2015-09-11 01:50:48.895] [INFO] master - mongoose connected
[2015-09-11 01:50:48.902] [INFO] master - mongoose connect
[2015-09-15 01:40:03.684] [INFO] master - master start
[2015-09-15 01:41:15.589] [INFO] master - uri :  mongodb://172.17.42.1:27017/xwcloudtest
[2015-09-15 01:41:15.639] [INFO] master - master start
[2015-09-15 01:44:32.681] [INFO] master - uri :  mongodb://172.17.42.1:27017/xwcloudtest
[2015-09-15 01:44:32.728] [INFO] master - master start
[2015-09-15 01:44:32.763] [INFO] master - mongoose connected
[2015-09-15 01:44:32.767] [INFO] master - mongoose connect
[2015-09-15 01:45:13.335] [INFO] master - master start
[2015-09-15 01:45:13.350] [INFO] master - mongoose connected
[2015-09-15 01:45:13.355] [INFO] master - mongoose connect
[2015-09-15 03:32:29.611] [INFO] master - master start
[2015-09-15 03:32:29.624] [INFO] master - mongoose connected
[2015-09-15 03:32:29.629] [INFO] master - mongoose connect
[2015-09-15 03:32:29.709] [ERROR] master - res :  { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 204,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/register HTTP/1.1\r\nContent-Type: application/json\r\nContent-Length: 77\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/register',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 204,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/register HTTP/1.1\r\nContent-Type: application/json\r\nContent-Length: 77\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/register',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 03:32:29 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 03:32:29 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 204,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/register HTTP/1.1\r\nContent-Type: application/json\r\nContent-Length: 77\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/register',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 204,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 204,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/register HTTP/1.1\r\nContent-Type: application/json\r\nContent-Length: 77\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json',
        'content-length': 77,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/register',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 05:28:21.133] [INFO] master - master start
[2015-09-15 05:28:21.145] [INFO] master - mongoose connected
[2015-09-15 05:28:21.150] [INFO] master - mongoose connect
[2015-09-15 05:28:21.156] [ERROR] master - res :  { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 310,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/register HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/register',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 310,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/register HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/register',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 05:28:21 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 05:28:21 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 310,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/register HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/register',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 310,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 310,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/register HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 167,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/register',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 05:33:11.961] [INFO] master - master start
[2015-09-15 05:33:11.972] [INFO] master - mongoose connected
[2015-09-15 05:33:11.977] [INFO] master - mongoose connect
[2015-09-15 06:00:43.522] [INFO] master - master start
[2015-09-15 06:00:43.533] [INFO] master - mongoose connected
[2015-09-15 06:00:43.538] [INFO] master - mongoose connect
[2015-09-15 06:00:43.544] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:02:50.547] [INFO] master - master start
[2015-09-15 06:02:50.557] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:02:50.564] [INFO] master - mongoose connected
[2015-09-15 06:02:50.568] [INFO] master - mongoose connect
[2015-09-15 06:05:15.548] [INFO] master - master start
[2015-09-15 06:05:15.557] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:05:15.563] [INFO] master - mongoose connected
[2015-09-15 06:05:15.567] [INFO] master - mongoose connect
[2015-09-15 06:06:54.967] [INFO] master - master start
[2015-09-15 06:06:54.976] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:06:54.977] [INFO] master - set time out updateOfWebServer 
[2015-09-15 06:06:54.983] [INFO] master - mongoose connected
[2015-09-15 06:06:54.987] [INFO] master - mongoose connect
[2015-09-15 06:08:32.930] [ERROR] master - problem with request: socket hang up
[2015-09-15 06:08:34.934] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:08:36.940] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:08:38.945] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:08:40.950] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:08:42.955] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:08:44.961] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:08:46.967] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:08:48.974] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:08:50.978] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:08:52.984] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:08:54.989] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:08:56.994] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:08:59.001] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:09:01.005] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:09:03.011] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:09:05.017] [ERROR] master - problem with request: connect ECONNREFUSED
[2015-09-15 06:09:30.142] [INFO] master - master start
[2015-09-15 06:09:30.145] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 06:09:30.154] [INFO] master - mongoose connected
[2015-09-15 06:09:30.159] [INFO] master - mongoose connect
[2015-09-15 06:09:32.156] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 06:09:34.163] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 06:09:36.169] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 06:09:38.190] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:09:38.190] [INFO] master - set time out updateOfWebServer 
[2015-09-15 06:11:15.624] [INFO] master - master start
[2015-09-15 06:11:15.633] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:11:15.634] [INFO] master - set time out updateOfWebServer 
[2015-09-15 06:11:15.639] [INFO] master - mongoose connected
[2015-09-15 06:11:15.644] [INFO] master - mongoose connect
[2015-09-15 06:12:10.050] [INFO] master - master start
[2015-09-15 06:12:10.059] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:12:10.060] [INFO] master - set time out updateOfWebServer 
[2015-09-15 06:12:10.066] [INFO] master - mongoose connected
[2015-09-15 06:12:10.070] [INFO] master - mongoose connect
[2015-09-15 06:13:55.204] [INFO] master - master start
[2015-09-15 06:13:55.213] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:13:55.214] [INFO] master - set time out updateOfWebServer start
[2015-09-15 06:13:55.214] [INFO] master - set time out updateOfWebServer end
[2015-09-15 06:13:55.219] [INFO] master - mongoose connected
[2015-09-15 06:13:55.224] [INFO] master - mongoose connect
[2015-09-15 06:15:22.271] [INFO] master - master start
[2015-09-15 06:15:22.279] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:15:22.280] [INFO] master - set time out updateOfWebServer start
[2015-09-15 06:15:22.280] [INFO] master - set time out updateOfWebServer end
[2015-09-15 06:15:22.286] [INFO] master - mongoose connected
[2015-09-15 06:15:22.290] [INFO] master - mongoose connect
[2015-09-15 06:15:24.283] [INFO] master - update function start 
[2015-09-15 06:16:41.479] [INFO] master - master start
[2015-09-15 06:16:41.488] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:16:41.489] [INFO] master - set time out updateOfWebServer start
[2015-09-15 06:16:41.489] [INFO] master - set time out updateOfWebServer end
[2015-09-15 06:16:41.495] [INFO] master - mongoose connected
[2015-09-15 06:16:41.499] [INFO] master - mongoose connect
[2015-09-15 06:16:43.491] [INFO] master - update function start 
[2015-09-15 06:16:43.493] [INFO] master - update function start 1
[2015-09-15 06:16:43.496] [INFO] master - update function start 2
[2015-09-15 06:16:43.496] [INFO] master - update function start 3
[2015-09-15 06:19:18.699] [INFO] master - master start
[2015-09-15 06:19:18.708] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:19:18.708] [INFO] master - set time out updateOfWebServer start
[2015-09-15 06:19:18.709] [INFO] master - set time out updateOfWebServer end
[2015-09-15 06:19:18.714] [INFO] master - mongoose connected
[2015-09-15 06:19:18.719] [INFO] master - mongoose connect
[2015-09-15 06:19:20.711] [INFO] master - update function start 
[2015-09-15 06:19:20.713] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:19:20.718] [INFO] master - update function start 3
[2015-09-15 06:19:20.719] [INFO] master - update function start 4
[2015-09-15 06:21:19.623] [INFO] master - master start
[2015-09-15 06:21:19.632] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:24:11.479] [INFO] master - master start
[2015-09-15 06:24:11.488] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:25:30.933] [INFO] master - master start
[2015-09-15 06:25:30.944] [INFO] master - mongoose connected
[2015-09-15 06:25:30.949] [INFO] master - mongoose connect
[2015-09-15 06:25:30.955] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:34:15.456] [INFO] master - update function start 
[2015-09-15 06:34:15.459] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 180 } }
[2015-09-15 06:34:42.019] [INFO] master - update function start 
[2015-09-15 06:34:42.021] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 180 } }
[2015-09-15 06:34:42.024] [INFO] master - update function start 3
[2015-09-15 06:34:42.024] [INFO] master - update function start 4
[2015-09-15 06:34:42.213] [INFO] master - master start
[2015-09-15 06:34:42.220] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:34:42.221] [INFO] master - set time out updateOfWebServer start
[2015-09-15 06:34:42.221] [INFO] master - set time out updateOfWebServer end
[2015-09-15 06:34:42.226] [INFO] master - mongoose connected
[2015-09-15 06:34:42.231] [INFO] master - mongoose connect
[2015-09-15 06:34:44.222] [INFO] master - update function start 
[2015-09-15 06:34:44.224] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:34:44.227] [INFO] master - update function start 3
[2015-09-15 06:34:44.227] [INFO] master - update function start 4
[2015-09-15 06:35:24.144] [INFO] master - update function start 
[2015-09-15 06:35:24.147] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 180 } }
[2015-09-15 06:35:24.152] [INFO] master - update function start 3
[2015-09-15 06:35:24.152] [INFO] master - update function start 4
[2015-09-15 06:35:24.349] [INFO] master - master start
[2015-09-15 06:35:24.357] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:35:24.358] [INFO] master - set time out updateOfWebServer start
[2015-09-15 06:35:24.358] [INFO] master - set time out updateOfWebServer end
[2015-09-15 06:35:24.363] [INFO] master - mongoose connected
[2015-09-15 06:35:24.367] [INFO] master - mongoose connect
[2015-09-15 06:35:26.360] [INFO] master - update function start 
[2015-09-15 06:35:26.363] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:35:26.365] [INFO] master - update function start 3
[2015-09-15 06:35:26.365] [INFO] master - update function start 4
[2015-09-15 06:36:38.048] [INFO] master - update function start 
[2015-09-15 06:36:38.052] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 180 } }
[2015-09-15 06:36:38.056] [INFO] master - update function start 3
[2015-09-15 06:36:38.056] [INFO] master - update function start 4
[2015-09-15 06:36:38.057] [INFO] master - update function end
[2015-09-15 06:36:38.253] [INFO] master - master start
[2015-09-15 06:36:38.262] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:36:38.263] [INFO] master - set time out updateOfWebServer start
[2015-09-15 06:36:38.263] [INFO] master - set time out updateOfWebServer end
[2015-09-15 06:36:38.268] [INFO] master - mongoose connected
[2015-09-15 06:36:38.273] [INFO] master - mongoose connect
[2015-09-15 06:36:40.266] [INFO] master - update function start 
[2015-09-15 06:36:40.267] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:36:40.268] [INFO] master - update function start 3
[2015-09-15 06:36:40.269] [INFO] master - update function start 4
[2015-09-15 06:36:40.269] [INFO] master - update function end
[2015-09-15 06:36:54.104] [ERROR] master - update problem with request: socket hang up
[2015-09-15 06:36:54.105] [ERROR] master - update problem with request: socket hang up
[2015-09-15 06:36:56.106] [INFO] master - update function start 
[2015-09-15 06:36:56.107] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:36:56.107] [INFO] master - update function start 3
[2015-09-15 06:36:56.107] [INFO] master - update function start 4
[2015-09-15 06:36:56.108] [INFO] master - update function end
[2015-09-15 06:36:56.108] [INFO] master - update function start 
[2015-09-15 06:36:56.109] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:36:56.109] [INFO] master - update function start 3
[2015-09-15 06:36:56.110] [INFO] master - update function start 4
[2015-09-15 06:36:56.110] [INFO] master - update function end
[2015-09-15 06:36:56.111] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:36:56.112] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:36:58.114] [INFO] master - update function start 
[2015-09-15 06:36:58.117] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:36:58.119] [INFO] master - update function start 3
[2015-09-15 06:36:58.120] [INFO] master - update function start 4
[2015-09-15 06:36:58.120] [INFO] master - update function end
[2015-09-15 06:36:58.121] [INFO] master - update function start 
[2015-09-15 06:36:58.122] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:36:58.124] [INFO] master - update function start 3
[2015-09-15 06:36:58.125] [INFO] master - update function start 4
[2015-09-15 06:36:58.125] [INFO] master - update function end
[2015-09-15 06:36:58.126] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:36:58.127] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:00.130] [INFO] master - update function start 
[2015-09-15 06:37:00.131] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:37:00.132] [INFO] master - update function start 3
[2015-09-15 06:37:00.132] [INFO] master - update function start 4
[2015-09-15 06:37:00.132] [INFO] master - update function end
[2015-09-15 06:37:00.132] [INFO] master - update function start 
[2015-09-15 06:37:00.133] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:37:00.133] [INFO] master - update function start 3
[2015-09-15 06:37:00.134] [INFO] master - update function start 4
[2015-09-15 06:37:00.134] [INFO] master - update function end
[2015-09-15 06:37:00.135] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:00.135] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:02.138] [INFO] master - update function start 
[2015-09-15 06:37:02.139] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:02.140] [INFO] master - update function start 3
[2015-09-15 06:37:02.141] [INFO] master - update function start 4
[2015-09-15 06:37:02.141] [INFO] master - update function end
[2015-09-15 06:37:02.141] [INFO] master - update function start 
[2015-09-15 06:37:02.143] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:02.145] [INFO] master - update function start 3
[2015-09-15 06:37:02.145] [INFO] master - update function start 4
[2015-09-15 06:37:02.146] [INFO] master - update function end
[2015-09-15 06:37:02.147] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:02.148] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:04.149] [INFO] master - update function start 
[2015-09-15 06:37:04.153] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:04.155] [INFO] master - update function start 3
[2015-09-15 06:37:04.155] [INFO] master - update function start 4
[2015-09-15 06:37:04.155] [INFO] master - update function end
[2015-09-15 06:37:04.156] [INFO] master - update function start 
[2015-09-15 06:37:04.157] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:04.159] [INFO] master - update function start 3
[2015-09-15 06:37:04.159] [INFO] master - update function start 4
[2015-09-15 06:37:04.159] [INFO] master - update function end
[2015-09-15 06:37:04.161] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:04.162] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:06.163] [INFO] master - update function start 
[2015-09-15 06:37:06.165] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:06.166] [INFO] master - update function start 3
[2015-09-15 06:37:06.166] [INFO] master - update function start 4
[2015-09-15 06:37:06.167] [INFO] master - update function end
[2015-09-15 06:37:06.167] [INFO] master - update function start 
[2015-09-15 06:37:06.169] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:06.170] [INFO] master - update function start 3
[2015-09-15 06:37:06.170] [INFO] master - update function start 4
[2015-09-15 06:37:06.171] [INFO] master - update function end
[2015-09-15 06:37:06.172] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:06.174] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:08.175] [INFO] master - update function start 
[2015-09-15 06:37:08.177] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:08.179] [INFO] master - update function start 3
[2015-09-15 06:37:08.179] [INFO] master - update function start 4
[2015-09-15 06:37:08.180] [INFO] master - update function end
[2015-09-15 06:37:08.180] [INFO] master - update function start 
[2015-09-15 06:37:08.181] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:08.182] [INFO] master - update function start 3
[2015-09-15 06:37:08.182] [INFO] master - update function start 4
[2015-09-15 06:37:08.183] [INFO] master - update function end
[2015-09-15 06:37:08.184] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:08.185] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:10.186] [INFO] master - update function start 
[2015-09-15 06:37:10.188] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:10.190] [INFO] master - update function start 3
[2015-09-15 06:37:10.191] [INFO] master - update function start 4
[2015-09-15 06:37:10.191] [INFO] master - update function end
[2015-09-15 06:37:10.191] [INFO] master - update function start 
[2015-09-15 06:37:10.192] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:10.193] [INFO] master - update function start 3
[2015-09-15 06:37:10.194] [INFO] master - update function start 4
[2015-09-15 06:37:10.194] [INFO] master - update function end
[2015-09-15 06:37:10.195] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:10.196] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:12.197] [INFO] master - update function start 
[2015-09-15 06:37:12.199] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:37:12.200] [INFO] master - update function start 3
[2015-09-15 06:37:12.200] [INFO] master - update function start 4
[2015-09-15 06:37:12.201] [INFO] master - update function end
[2015-09-15 06:37:12.201] [INFO] master - update function start 
[2015-09-15 06:37:12.202] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:37:12.203] [INFO] master - update function start 3
[2015-09-15 06:37:12.204] [INFO] master - update function start 4
[2015-09-15 06:37:12.204] [INFO] master - update function end
[2015-09-15 06:37:12.205] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:12.206] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:14.208] [INFO] master - update function start 
[2015-09-15 06:37:14.210] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:14.212] [INFO] master - update function start 3
[2015-09-15 06:37:14.212] [INFO] master - update function start 4
[2015-09-15 06:37:14.213] [INFO] master - update function end
[2015-09-15 06:37:14.214] [INFO] master - update function start 
[2015-09-15 06:37:14.219] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:14.222] [INFO] master - update function start 3
[2015-09-15 06:37:14.222] [INFO] master - update function start 4
[2015-09-15 06:37:14.223] [INFO] master - update function end
[2015-09-15 06:37:14.224] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:14.225] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:16.228] [INFO] master - update function start 
[2015-09-15 06:37:16.230] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:16.231] [INFO] master - update function start 3
[2015-09-15 06:37:16.231] [INFO] master - update function start 4
[2015-09-15 06:37:16.232] [INFO] master - update function end
[2015-09-15 06:37:16.232] [INFO] master - update function start 
[2015-09-15 06:37:16.234] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:16.236] [INFO] master - update function start 3
[2015-09-15 06:37:16.236] [INFO] master - update function start 4
[2015-09-15 06:37:16.236] [INFO] master - update function end
[2015-09-15 06:37:16.239] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:16.240] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:18.242] [INFO] master - update function start 
[2015-09-15 06:37:18.244] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:18.249] [INFO] master - update function start 3
[2015-09-15 06:37:18.249] [INFO] master - update function start 4
[2015-09-15 06:37:18.250] [INFO] master - update function end
[2015-09-15 06:37:18.250] [INFO] master - update function start 
[2015-09-15 06:37:18.252] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:18.253] [INFO] master - update function start 3
[2015-09-15 06:37:18.253] [INFO] master - update function start 4
[2015-09-15 06:37:18.253] [INFO] master - update function end
[2015-09-15 06:37:18.256] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:18.257] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:20.258] [INFO] master - update function start 
[2015-09-15 06:37:20.259] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:20.261] [INFO] master - update function start 3
[2015-09-15 06:37:20.261] [INFO] master - update function start 4
[2015-09-15 06:37:20.261] [INFO] master - update function end
[2015-09-15 06:37:20.261] [INFO] master - update function start 
[2015-09-15 06:37:20.262] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:20.263] [INFO] master - update function start 3
[2015-09-15 06:37:20.264] [INFO] master - update function start 4
[2015-09-15 06:37:20.264] [INFO] master - update function end
[2015-09-15 06:37:20.265] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:20.265] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:22.267] [INFO] master - update function start 
[2015-09-15 06:37:22.268] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:22.269] [INFO] master - update function start 3
[2015-09-15 06:37:22.269] [INFO] master - update function start 4
[2015-09-15 06:37:22.269] [INFO] master - update function end
[2015-09-15 06:37:22.270] [INFO] master - update function start 
[2015-09-15 06:37:22.270] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:22.271] [INFO] master - update function start 3
[2015-09-15 06:37:22.271] [INFO] master - update function start 4
[2015-09-15 06:37:22.271] [INFO] master - update function end
[2015-09-15 06:37:22.271] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:22.271] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:24.273] [INFO] master - update function start 
[2015-09-15 06:37:24.275] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:37:24.276] [INFO] master - update function start 3
[2015-09-15 06:37:24.276] [INFO] master - update function start 4
[2015-09-15 06:37:24.277] [INFO] master - update function end
[2015-09-15 06:37:24.277] [INFO] master - update function start 
[2015-09-15 06:37:24.278] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:37:24.279] [INFO] master - update function start 3
[2015-09-15 06:37:24.279] [INFO] master - update function start 4
[2015-09-15 06:37:24.280] [INFO] master - update function end
[2015-09-15 06:37:24.281] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:24.283] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:26.286] [INFO] master - update function start 
[2015-09-15 06:37:26.288] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:26.290] [INFO] master - update function start 3
[2015-09-15 06:37:26.291] [INFO] master - update function start 4
[2015-09-15 06:37:26.291] [INFO] master - update function end
[2015-09-15 06:37:26.292] [INFO] master - update function start 
[2015-09-15 06:37:26.293] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:26.294] [INFO] master - update function start 3
[2015-09-15 06:37:26.295] [INFO] master - update function start 4
[2015-09-15 06:37:26.295] [INFO] master - update function end
[2015-09-15 06:37:26.296] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:26.297] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:28.298] [INFO] master - update function start 
[2015-09-15 06:37:28.299] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:28.300] [INFO] master - update function start 3
[2015-09-15 06:37:28.300] [INFO] master - update function start 4
[2015-09-15 06:37:28.301] [INFO] master - update function end
[2015-09-15 06:37:28.301] [INFO] master - update function start 
[2015-09-15 06:37:28.302] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:28.303] [INFO] master - update function start 3
[2015-09-15 06:37:28.303] [INFO] master - update function start 4
[2015-09-15 06:37:28.303] [INFO] master - update function end
[2015-09-15 06:37:28.304] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:28.305] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:37:30.307] [INFO] master - update function start 
[2015-09-15 06:37:30.309] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:37:30.310] [INFO] master - update function start 3
[2015-09-15 06:37:30.310] [INFO] master - update function start 4
[2015-09-15 06:37:30.310] [INFO] master - update function end
[2015-09-15 06:37:30.311] [INFO] master - update function start 
[2015-09-15 06:37:30.312] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:37:30.313] [INFO] master - update function start 3
[2015-09-15 06:37:30.313] [INFO] master - update function start 4
[2015-09-15 06:37:30.313] [INFO] master - update function end
[2015-09-15 06:37:30.349] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:30 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:30 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 167,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:30.366] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:30.367] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 15,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 15,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:30 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:30 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 15,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 167,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:30.373] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:32.369] [INFO] master - update function start 
[2015-09-15 06:37:32.371] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:37:32.372] [INFO] master - update function start 3
[2015-09-15 06:37:32.372] [INFO] master - update function start 4
[2015-09-15 06:37:32.372] [INFO] master - update function end
[2015-09-15 06:37:32.373] [INFO] master - update function start 
[2015-09-15 06:37:32.375] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:37:32.376] [INFO] master - update function start 3
[2015-09-15 06:37:32.376] [INFO] master - update function start 4
[2015-09-15 06:37:32.376] [INFO] master - update function end
[2015-09-15 06:37:32.381] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:32 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:32 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 167,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:32.401] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:32.402] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 15,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 15,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:32 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:32 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 15,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 167,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:32.417] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:34.403] [INFO] master - update function start 
[2015-09-15 06:37:34.405] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:34.406] [INFO] master - update function start 3
[2015-09-15 06:37:34.407] [INFO] master - update function start 4
[2015-09-15 06:37:34.407] [INFO] master - update function end
[2015-09-15 06:37:34.414] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:34 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:34 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 166,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:34.429] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:34.430] [INFO] master - update function start 
[2015-09-15 06:37:34.431] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:34.431] [INFO] master - update function start 3
[2015-09-15 06:37:34.432] [INFO] master - update function start 4
[2015-09-15 06:37:34.432] [INFO] master - update function end
[2015-09-15 06:37:34.436] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:34 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:34 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 166,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:34.447] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:36.432] [INFO] master - update function start 
[2015-09-15 06:37:36.434] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:36.435] [INFO] master - update function start 3
[2015-09-15 06:37:36.436] [INFO] master - update function start 4
[2015-09-15 06:37:36.436] [INFO] master - update function end
[2015-09-15 06:37:36.440] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:36 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:36 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 166,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:36.456] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:36.457] [INFO] master - update function start 
[2015-09-15 06:37:36.458] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:37:36.459] [INFO] master - update function start 3
[2015-09-15 06:37:36.459] [INFO] master - update function start 4
[2015-09-15 06:37:36.459] [INFO] master - update function end
[2015-09-15 06:37:36.462] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:36 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:36 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 167,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:36.477] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:38.458] [INFO] master - update function start 
[2015-09-15 06:37:38.460] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:38.461] [INFO] master - update function start 3
[2015-09-15 06:37:38.462] [INFO] master - update function start 4
[2015-09-15 06:37:38.462] [INFO] master - update function end
[2015-09-15 06:37:38.466] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:38 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:38 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 166,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:38.483] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:38.484] [INFO] master - update function start 
[2015-09-15 06:37:38.484] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:37:38.485] [INFO] master - update function start 3
[2015-09-15 06:37:38.486] [INFO] master - update function start 4
[2015-09-15 06:37:38.486] [INFO] master - update function end
[2015-09-15 06:37:38.490] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:38 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:38 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 167,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:38.503] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:40.485] [INFO] master - update function start 
[2015-09-15 06:37:40.487] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:40.490] [INFO] master - update function start 3
[2015-09-15 06:37:40.490] [INFO] master - update function start 4
[2015-09-15 06:37:40.490] [INFO] master - update function end
[2015-09-15 06:37:40.497] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:40 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:40 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 166,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:40.520] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:40.521] [INFO] master - update function start 
[2015-09-15 06:37:40.523] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:40.524] [INFO] master - update function start 3
[2015-09-15 06:37:40.524] [INFO] master - update function start 4
[2015-09-15 06:37:40.524] [INFO] master - update function end
[2015-09-15 06:37:40.529] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:40 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:40 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 166,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:40.541] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:42.523] [INFO] master - update function start 
[2015-09-15 06:37:42.525] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:42.526] [INFO] master - update function start 3
[2015-09-15 06:37:42.526] [INFO] master - update function start 4
[2015-09-15 06:37:42.526] [INFO] master - update function end
[2015-09-15 06:37:42.531] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:42 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:42 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 166,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:42.546] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:42.546] [INFO] master - update function start 
[2015-09-15 06:37:42.547] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:42.547] [INFO] master - update function start 3
[2015-09-15 06:37:42.548] [INFO] master - update function start 4
[2015-09-15 06:37:42.548] [INFO] master - update function end
[2015-09-15 06:37:42.550] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:42 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:42 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 166,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:42.559] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:44.548] [INFO] master - update function start 
[2015-09-15 06:37:44.549] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:37:44.550] [INFO] master - update function start 3
[2015-09-15 06:37:44.550] [INFO] master - update function start 4
[2015-09-15 06:37:44.550] [INFO] master - update function end
[2015-09-15 06:37:44.554] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:44 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:44 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 166,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:44.561] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:37:44.561] [INFO] master - update function start 
[2015-09-15 06:37:44.561] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:37:44.562] [INFO] master - update function start 3
[2015-09-15 06:37:44.562] [INFO] master - update function start 4
[2015-09-15 06:37:44.562] [INFO] master - update function end
[2015-09-15 06:37:44.563] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:37:44 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:37:44 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 167,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:37:44.568] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:38:06.800] [INFO] master - update function start 
[2015-09-15 06:38:06.804] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 180 } }
[2015-09-15 06:38:06.808] [INFO] master - update function start 3
[2015-09-15 06:38:06.808] [INFO] master - update function start 4
[2015-09-15 06:38:06.809] [INFO] master - update function end
[2015-09-15 06:38:07.003] [INFO] master - master start
[2015-09-15 06:38:07.009] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 321,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 180\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 321,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 180\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:38:07 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:38:07 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 321,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 180\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 321,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 321,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 180\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 180,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:38:07.020] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:38:07.026] [INFO] master - mongoose connected
[2015-09-15 06:38:07.030] [INFO] master - mongoose connect
[2015-09-15 06:38:09.023] [INFO] master - update function start 
[2015-09-15 06:38:09.024] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 181 } }
[2015-09-15 06:38:09.026] [INFO] master - update function start 3
[2015-09-15 06:38:09.027] [INFO] master - update function start 4
[2015-09-15 06:38:09.028] [INFO] master - update function end
[2015-09-15 06:38:09.033] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:38:09 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:38:09 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 322,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 322,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 181,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:38:09.041] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:38:11.043] [INFO] master - update function start 
[2015-09-15 06:38:11.045] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 179 } }
[2015-09-15 06:38:11.046] [INFO] master - update function start 3
[2015-09-15 06:38:11.046] [INFO] master - update function start 4
[2015-09-15 06:38:11.047] [INFO] master - update function end
[2015-09-15 06:38:11.050] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 320,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 179\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 320,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 179\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:38:11 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:38:11 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 320,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 179\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 320,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 320,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 179\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 179,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:38:11.064] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:38:13.067] [INFO] master - update function start 
[2015-09-15 06:38:13.068] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 181 } }
[2015-09-15 06:38:13.069] [INFO] master - update function start 3
[2015-09-15 06:38:13.070] [INFO] master - update function start 4
[2015-09-15 06:38:13.070] [INFO] master - update function end
[2015-09-15 06:38:13.075] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:38:13 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:38:13 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 322,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 322,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 181,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:38:13.093] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:38:15.095] [INFO] master - update function start 
[2015-09-15 06:38:15.097] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 181 } }
[2015-09-15 06:38:15.099] [INFO] master - update function start 3
[2015-09-15 06:38:15.099] [INFO] master - update function start 4
[2015-09-15 06:38:15.100] [INFO] master - update function end
[2015-09-15 06:38:15.105] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:38:15 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:38:15 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 322,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 322,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 181,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:38:15.116] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:38:17.119] [INFO] master - update function start 
[2015-09-15 06:38:17.120] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 181 } }
[2015-09-15 06:38:17.120] [INFO] master - update function start 3
[2015-09-15 06:38:17.122] [INFO] master - update function start 4
[2015-09-15 06:38:17.122] [INFO] master - update function end
[2015-09-15 06:38:17.125] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:38:17 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:38:17 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 322,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 322,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 181,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:38:17.134] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:38:19.136] [INFO] master - update function start 
[2015-09-15 06:38:19.137] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 181 } }
[2015-09-15 06:38:19.138] [INFO] master - update function start 3
[2015-09-15 06:38:19.138] [INFO] master - update function start 4
[2015-09-15 06:38:19.138] [INFO] master - update function end
[2015-09-15 06:38:19.141] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:38:19 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:38:19 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 322,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 322,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 322,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 181\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 181,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:38:19.150] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:38:44.125] [INFO] master - master start
[2015-09-15 06:38:44.134] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:38:44.135] [INFO] master - set time out updateOfWebServer start
[2015-09-15 06:38:44.135] [INFO] master - set time out updateOfWebServer end
[2015-09-15 06:38:44.141] [INFO] master - mongoose connected
[2015-09-15 06:38:44.145] [INFO] master - mongoose connect
[2015-09-15 06:38:46.138] [INFO] master - update function start 
[2015-09-15 06:38:46.140] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 166 } }
[2015-09-15 06:38:46.149] [INFO] master - update function start 3
[2015-09-15 06:38:46.149] [INFO] master - update function start 4
[2015-09-15 06:38:46.151] [INFO] master - update function end
[2015-09-15 06:38:46.157] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:38:46 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:38:46 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 307,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 307,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 166\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 166,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:38:46.183] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:38:48.185] [INFO] master - update function start 
[2015-09-15 06:38:48.188] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:38:48.189] [INFO] master - update function start 3
[2015-09-15 06:38:48.190] [INFO] master - update function start 4
[2015-09-15 06:38:48.190] [INFO] master - update function end
[2015-09-15 06:38:48.195] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:38:48 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:38:48 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 167,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:38:48.216] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:38:50.219] [INFO] master - update function start 
[2015-09-15 06:38:50.221] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:38:50.223] [INFO] master - update function start 3
[2015-09-15 06:38:50.224] [INFO] master - update function start 4
[2015-09-15 06:38:50.225] [INFO] master - update function end
[2015-09-15 06:38:50.231] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:38:50 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:38:50 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 167,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:38:50.255] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:38:52.258] [INFO] master - update function start 
[2015-09-15 06:38:52.259] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:38:52.260] [INFO] master - update function start 3
[2015-09-15 06:38:52.260] [INFO] master - update function start 4
[2015-09-15 06:38:52.261] [INFO] master - update function end
[2015-09-15 06:38:52.263] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:38:52 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:38:52 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 167,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:38:52.274] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:38:54.276] [INFO] master - update function start 
[2015-09-15 06:38:54.277] [INFO] master - update function start 1 { port: 8000,
  hostname: '127.0.0.1',
  method: 'POST',
  path: '/master/update',
  headers: 
   { 'Content-Type': 'application/json; charset=utf-8',
     'Content-Length': 167 } }
[2015-09-15 06:38:54.278] [INFO] master - update function start 3
[2015-09-15 06:38:54.278] [INFO] master - update function start 4
[2015-09-15 06:38:54.278] [INFO] master - update function end
[2015-09-15 06:38:54.282] [INFO] master - update function start 2 { _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function: responseOnEnd] },
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '32',
     etag: 'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     date: 'Tue, 15 Sep 2015 06:38:54 GMT',
     connection: 'close' },
  rawHeaders: 
   [ 'X-Powered-By',
     'Express',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '32',
     'ETag',
     'W/"20-EAYMviXtBg9b80PxqTBLJw"',
     'Date',
     'Tue, 15 Sep 2015 06:38:54 GMT',
     'Connection',
     'close' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: '127.0.0.1',
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        free: [Function: onFree],
        close: [Object],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 234,
     _bytesDispatched: 308,
     _pendingData: null,
     _pendingEncoding: '',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/master/update',
        parser: [Object],
        res: [Circular] },
     read: [Function],
     _consuming: true },
  _consuming: false,
  _dumped: false,
  req: 
   { domain: null,
     _events: { error: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedHeader: { 'content-length': false },
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     _headerSent: true,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: '127.0.0.1',
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 234,
        _bytesDispatched: 308,
        _pendingData: null,
        _pendingEncoding: '',
        parser: [Object],
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true },
     _header: 'POST /master/update HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 167\r\nHost: 127.0.0.1:8000\r\nConnection: close\r\n\r\n',
     _headers: 
      { 'content-type': 'application/json; charset=utf-8',
        'content-length': 167,
        host: '127.0.0.1:8000' },
     _headerNames: 
      { 'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        host: 'Host' },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'POST',
     path: '/master/update',
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Object],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     res: [Circular] } }
[2015-09-15 06:38:54.298] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:39:39.759] [INFO] master - master start
[2015-09-15 06:39:39.770] [INFO] master - mongoose connected
[2015-09-15 06:39:39.775] [INFO] master - mongoose connect
[2015-09-15 06:39:39.781] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:39:39.782] [INFO] master - set time out updateOfWebServer start
[2015-09-15 06:39:39.782] [INFO] master - set time out updateOfWebServer end
[2015-09-15 06:39:41.783] [INFO] master - update function start 
[2015-09-15 06:39:41.796] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:39:43.799] [INFO] master - update function start 
[2015-09-15 06:39:43.803] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:39:45.805] [INFO] master - update function start 
[2015-09-15 06:39:45.812] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:39:47.814] [INFO] master - update function start 
[2015-09-15 06:39:47.820] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:39:49.822] [INFO] master - update function start 
[2015-09-15 06:39:49.828] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:39:51.831] [INFO] master - update function start 
[2015-09-15 06:39:51.838] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:39:53.841] [INFO] master - update function start 
[2015-09-15 06:39:53.848] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:39:55.854] [INFO] master - update function start 
[2015-09-15 06:39:55.860] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:40:36.770] [INFO] master - master start
[2015-09-15 06:40:36.780] [INFO] master - register success. master_id :  undefined
[2015-09-15 06:40:36.786] [INFO] master - mongoose connected
[2015-09-15 06:40:36.791] [INFO] master - mongoose connect
[2015-09-15 06:40:38.795] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:40:40.803] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:40:42.810] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:40:44.816] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:40:46.823] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:40:48.831] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:40:50.839] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:40:52.846] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:40:54.851] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:40:56.857] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:40:58.866] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:00.880] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:02.891] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:04.898] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:06.909] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:08.918] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:10.926] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:12.937] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:14.947] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:16.953] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:18.962] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:20.970] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:22.984] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:24.995] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:27.003] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:29.012] [INFO] master - update success. master_id :  undefined
[2015-09-15 06:41:31.017] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:33.022] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:35.028] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:37.035] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:39.041] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:41.048] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:43.052] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:45.057] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:47.062] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:49.066] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:51.072] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:53.078] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:55.083] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:57.089] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:41:59.094] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:42:01.100] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:42:03.106] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:42:05.112] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:42:07.116] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:42:09.121] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:42:11.128] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:42:13.133] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:42:15.138] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:42:17.143] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:42:19.147] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 06:42:21.153] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:24:55.547] [INFO] master - master start
[2015-09-15 07:24:55.558] [INFO] master - mongoose connected
[2015-09-15 07:24:55.564] [INFO] master - mongoose connect
[2015-09-15 07:24:55.575] [INFO] master - register success. master_id :  undefined
[2015-09-15 07:24:57.378] [INFO] master - update success
[2015-09-15 07:24:57.590] [INFO] master - update success
[2015-09-15 07:24:59.369] [INFO] master - update success
[2015-09-15 07:24:59.386] [INFO] master - update success
[2015-09-15 07:24:59.596] [INFO] master - update success
[2015-09-15 07:25:01.371] [INFO] master - update success
[2015-09-15 07:25:01.377] [INFO] master - update success
[2015-09-15 07:25:01.391] [INFO] master - update success
[2015-09-15 07:25:01.604] [INFO] master - update success
[2015-09-15 07:25:03.382] [INFO] master - update success
[2015-09-15 07:25:03.386] [INFO] master - update success
[2015-09-15 07:25:03.390] [INFO] master - update success
[2015-09-15 07:25:03.397] [INFO] master - update success
[2015-09-15 07:25:03.612] [INFO] master - update success
[2015-09-15 07:25:05.380] [INFO] master - update success
[2015-09-15 07:25:05.390] [INFO] master - update success
[2015-09-15 07:25:05.402] [INFO] master - update success
[2015-09-15 07:25:05.406] [INFO] master - update success
[2015-09-15 07:25:05.409] [INFO] master - update success
[2015-09-15 07:25:05.619] [INFO] master - update success
[2015-09-15 07:25:07.391] [INFO] master - update success
[2015-09-15 07:25:07.397] [INFO] master - update success
[2015-09-15 07:25:07.401] [INFO] master - update success
[2015-09-15 07:25:07.412] [INFO] master - update success
[2015-09-15 07:25:07.415] [INFO] master - update success
[2015-09-15 07:25:07.420] [INFO] master - update success
[2015-09-15 07:25:07.624] [INFO] master - update success
[2015-09-15 07:25:09.391] [INFO] master - update success
[2015-09-15 07:25:09.407] [INFO] master - update success
[2015-09-15 07:25:09.409] [INFO] master - update success
[2015-09-15 07:25:09.412] [INFO] master - update success
[2015-09-15 07:25:09.423] [INFO] master - update success
[2015-09-15 07:25:09.424] [INFO] master - update success
[2015-09-15 07:25:09.427] [INFO] master - update success
[2015-09-15 07:25:09.630] [INFO] master - update success
[2015-09-15 07:25:11.392] [INFO] master - update success
[2015-09-15 07:25:11.396] [INFO] master - update success
[2015-09-15 07:25:11.411] [INFO] master - update success
[2015-09-15 07:25:11.412] [INFO] master - update success
[2015-09-15 07:25:11.414] [INFO] master - update success
[2015-09-15 07:25:11.426] [INFO] master - update success
[2015-09-15 07:25:11.429] [INFO] master - update success
[2015-09-15 07:25:11.430] [INFO] master - update success
[2015-09-15 07:25:11.634] [INFO] master - update success
[2015-09-15 07:25:13.400] [INFO] master - update success
[2015-09-15 07:25:13.401] [INFO] master - update success
[2015-09-15 07:25:13.405] [INFO] master - update success
[2015-09-15 07:25:13.416] [INFO] master - update success
[2015-09-15 07:25:13.418] [INFO] master - update success
[2015-09-15 07:25:13.421] [INFO] master - update success
[2015-09-15 07:25:13.432] [INFO] master - update success
[2015-09-15 07:25:13.434] [INFO] master - update success
[2015-09-15 07:25:13.436] [INFO] master - update success
[2015-09-15 07:25:13.640] [INFO] master - update success
[2015-09-15 07:25:15.399] [INFO] master - update success
[2015-09-15 07:25:15.409] [INFO] master - update success
[2015-09-15 07:25:15.411] [INFO] master - update success
[2015-09-15 07:25:15.412] [INFO] master - update success
[2015-09-15 07:25:15.419] [INFO] master - update success
[2015-09-15 07:25:15.421] [INFO] master - update success
[2015-09-15 07:25:15.424] [INFO] master - update success
[2015-09-15 07:25:15.436] [INFO] master - update success
[2015-09-15 07:25:15.438] [INFO] master - update success
[2015-09-15 07:25:15.440] [INFO] master - update success
[2015-09-15 07:25:15.645] [INFO] master - update success
[2015-09-15 07:26:44.770] [INFO] master - master start
[2015-09-15 07:26:44.778] [INFO] master - register success. master_id :  undefined
[2015-09-15 07:26:44.785] [INFO] master - mongoose connected
[2015-09-15 07:26:44.789] [INFO] master - mongoose connect
[2015-09-15 07:26:46.592] [INFO] master - update success
[2015-09-15 07:26:48.591] [INFO] master - update success
[2015-09-15 07:26:50.597] [INFO] master - update success
[2015-09-15 07:26:52.597] [INFO] master - update success
[2015-09-15 07:26:54.603] [INFO] master - update success
[2015-09-15 07:27:48.035] [INFO] master - master start
[2015-09-15 07:27:48.038] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:27:48.047] [INFO] master - mongoose connected
[2015-09-15 07:27:48.051] [INFO] master - mongoose connect
[2015-09-15 07:27:49.848] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:27:51.853] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:27:53.857] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:27:55.860] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:27:57.862] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:27:59.865] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:28:01.915] [INFO] master - register success. master_id :  undefined
[2015-09-15 07:28:03.887] [INFO] master - update success
[2015-09-15 07:28:05.881] [INFO] master - update success
[2015-09-15 07:28:07.886] [INFO] master - update success
[2015-09-15 07:28:09.888] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:28:11.893] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:28:13.899] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:28:15.901] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:28:17.906] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:28:19.908] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:28:21.913] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:28:23.917] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:28:25.923] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:29:45.277] [INFO] master - master start
[2015-09-15 07:29:45.281] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:29:45.292] [INFO] master - mongoose connected
[2015-09-15 07:29:45.297] [INFO] master - mongoose connect
[2015-09-15 07:29:47.093] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:29:49.098] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:29:51.120] [INFO] master - register success. master_id :  undefined
[2015-09-15 07:29:53.123] [INFO] master - update success
[2015-09-15 07:29:55.113] [INFO] master - update success
[2015-09-15 07:29:57.117] [INFO] master - update success
[2015-09-15 07:29:59.118] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:30:01.123] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:30:03.125] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:30:05.128] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:30:07.133] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:30:09.138] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:30:11.141] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:30:13.147] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:30:15.153] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:30:17.155] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:31:10.215] [INFO] master - master start
[2015-09-15 07:31:10.218] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:31:10.227] [INFO] master - mongoose connected
[2015-09-15 07:31:10.231] [INFO] master - mongoose connect
[2015-09-15 07:31:12.031] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:31:14.091] [INFO] master - register success. master_id :  undefined
[2015-09-15 07:31:16.057] [INFO] master - update success
[2015-09-15 07:31:18.051] [INFO] master - update success
[2015-09-15 07:31:20.049] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:31:22.054] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:31:24.059] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:31:26.063] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:31:28.066] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:32:01.570] [INFO] master - master start
[2015-09-15 07:32:01.584] [INFO] master - mongoose connected
[2015-09-15 07:32:01.589] [INFO] master - mongoose connect
[2015-09-15 07:32:01.594] [INFO] master - register success. master_id :  undefined
[2015-09-15 07:32:03.397] [INFO] master - update success
[2015-09-15 07:32:05.389] [INFO] master - update success
[2015-09-15 07:32:07.396] [INFO] master - update success
[2015-09-15 07:32:09.400] [INFO] master - update success
[2015-09-15 07:32:11.402] [INFO] master - update success
[2015-09-15 07:32:13.403] [INFO] master - update success
[2015-09-15 07:32:15.411] [INFO] master - update success
[2015-09-15 07:32:17.415] [INFO] master - update success
[2015-09-15 07:32:19.417] [INFO] master - update success
[2015-09-15 07:32:21.425] [INFO] master - update success
[2015-09-15 07:32:23.428] [INFO] master - update success
[2015-09-15 07:32:25.434] [INFO] master - update success
[2015-09-15 07:32:27.437] [INFO] master - update success
[2015-09-15 07:32:29.446] [INFO] master - update success
[2015-09-15 07:32:31.446] [INFO] master - update fail. count :  1
[2015-09-15 07:32:31.446] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:32:33.449] [INFO] master - update fail. count :  2
[2015-09-15 07:32:33.450] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:32:35.454] [INFO] master - update fail. count :  3
[2015-09-15 07:32:35.455] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:32:37.459] [INFO] master - update fail. count :  4
[2015-09-15 07:32:37.459] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:32:39.463] [INFO] master - update fail. count :  5
[2015-09-15 07:32:39.464] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:32:41.465] [INFO] master - update fail. count :  6
[2015-09-15 07:32:41.466] [INFO] master - web server status lost 
[2015-09-15 07:32:41.466] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:32:43.469] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:32:45.473] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:32:47.478] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:32:49.481] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:32:51.485] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:32:53.490] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:32:55.494] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:32:57.496] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:32:59.502] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:33:01.507] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:33:03.512] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:33:19.612] [INFO] master - master start
[2015-09-15 07:33:19.615] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:33:19.624] [INFO] master - mongoose connected
[2015-09-15 07:33:19.628] [INFO] master - mongoose connect
[2015-09-15 07:33:21.423] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:33:23.491] [INFO] master - register success. master_id :  undefined
[2015-09-15 07:33:25.447] [INFO] master - update success
[2015-09-15 07:33:27.446] [INFO] master - update fail. count :  1
[2015-09-15 07:33:27.446] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:33:29.450] [INFO] master - update fail. count :  2
[2015-09-15 07:33:29.451] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:33:31.454] [INFO] master - update fail. count :  3
[2015-09-15 07:33:31.455] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:33:33.459] [INFO] master - update fail. count :  4
[2015-09-15 07:33:33.460] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:33:35.462] [INFO] master - update fail. count :  5
[2015-09-15 07:33:35.462] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:33:37.465] [INFO] master - update fail. count :  6
[2015-09-15 07:33:37.466] [INFO] master - web server status lost 
[2015-09-15 07:33:37.466] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:33:39.467] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:33:41.473] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:34:07.925] [INFO] master - master start
[2015-09-15 07:34:07.940] [INFO] master - mongoose connected
[2015-09-15 07:34:07.946] [INFO] master - mongoose connect
[2015-09-15 07:34:07.952] [INFO] master - register success. master_id :  undefined
[2015-09-15 07:34:09.740] [INFO] master - update success
[2015-09-15 07:34:11.740] [INFO] master - update success
[2015-09-15 07:34:13.747] [INFO] master - update success
[2015-09-15 07:34:15.750] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:34:17.753] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:34:19.757] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:34:21.762] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:34:23.764] [INFO] master - web server status lost 
[2015-09-15 07:34:23.765] [ERROR] master - update problem with request: connect ECONNREFUSED
[2015-09-15 07:34:25.767] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:34:27.772] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:34:29.775] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:34:31.779] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:34:33.783] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:34:35.786] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:34:37.789] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 07:34:39.793] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:32:07.800] [INFO] master - master start
[2015-09-15 08:32:07.812] [INFO] master - mongoose connected
[2015-09-15 08:32:07.817] [INFO] master - mongoose connect
[2015-09-15 08:32:07.821] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:32:09.622] [INFO] master - update success
[2015-09-15 08:32:11.618] [INFO] master - update success
[2015-09-15 08:32:13.621] [INFO] master - update success
[2015-09-15 08:32:15.623] [INFO] master - update success
[2015-09-15 08:32:17.627] [INFO] master - update success
[2015-09-15 08:32:19.631] [INFO] master - update success
[2015-09-15 08:32:21.635] [INFO] master - update success
[2015-09-15 08:32:23.640] [INFO] master - update success
[2015-09-15 08:32:25.643] [INFO] master - update success
[2015-09-15 08:32:27.647] [INFO] master - update success
[2015-09-15 08:41:45.854] [INFO] master - master start
[2015-09-15 08:41:45.869] [INFO] master - mongoose connected
[2015-09-15 08:41:45.875] [INFO] master - mongoose connect
[2015-09-15 08:43:00.321] [INFO] master - master start
[2015-09-15 08:43:00.332] [INFO] master - mongoose connected
[2015-09-15 08:48:13.394] [INFO] master - master start
[2015-09-15 08:48:44.622] [INFO] master - master start
[2015-09-15 08:48:44.631] [INFO] master - chunk :  TypeError: undefined is not a function<br> &nbsp; &nbsp;at /home/guow/web/app.js:18:36<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/home/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at trim_prefix (/home/node_modules/express/lib/router/index.js:312:13)<br> &nbsp; &nbsp;at /home/node_modules/express/lib/router/index.js:280:7<br> &nbsp; &nbsp;at Function.process_params (/home/node_modules/express/lib/router/index.js:330:12)<br> &nbsp; &nbsp;at next (/home/node_modules/express/lib/router/index.js:271:10)<br> &nbsp; &nbsp;at serveStatic (/home/node_modules/express/node_modules/serve-static/index.js:74:16)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/home/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at trim_prefix (/home/node_modules/express/lib/router/index.js:312:13)<br> &nbsp; &nbsp;at /home/node_modules/express/lib/router/index.js:280:7<br> &nbsp; &nbsp;at Function.process_params (/home/node_modules/express/lib/router/index.js:330:12)<br> &nbsp; &nbsp;at next (/home/node_modules/express/lib/router/index.js:271:10)<br> &nbsp; &nbsp;at urlencodedParser (/home/node_modules/body-parser/lib/types/urlencoded.js:81:44)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/home/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at trim_prefix (/home/node_modules/express/lib/router/index.js:312:13)<br> &nbsp; &nbsp;at /home/node_modules/express/lib/router/index.js:280:7

[2015-09-15 08:51:09.960] [INFO] master - master start
[2015-09-15 08:51:09.975] [INFO] master - mongoose connected
[2015-09-15 08:51:09.980] [INFO] master - mongoose connect
[2015-09-15 08:51:09.984] [INFO] master - chunk :  {"result":-1,"message":"master is lost"}
[2015-09-15 08:51:09.985] [ERROR] master - register of web server fail.
[2015-09-15 08:51:11.788] [INFO] master - chunk :  {"result":-1,"message":"master is lost"}
[2015-09-15 08:51:11.789] [ERROR] master - register of web server fail.
[2015-09-15 08:51:13.783] [INFO] master - chunk :  {"result":-1,"message":"master is lost"}
[2015-09-15 08:51:13.784] [ERROR] master - register of web server fail.
[2015-09-15 08:51:15.787] [INFO] master - chunk :  {"result":-1,"message":"master is lost"}
[2015-09-15 08:51:15.788] [ERROR] master - register of web server fail.
[2015-09-15 08:51:17.791] [INFO] master - chunk :  {"result":-1,"message":"master is lost"}
[2015-09-15 08:51:17.791] [ERROR] master - register of web server fail.
[2015-09-15 08:51:19.794] [INFO] master - chunk :  {"result":-1,"message":"master is lost"}
[2015-09-15 08:51:19.794] [ERROR] master - register of web server fail.
[2015-09-15 08:51:21.799] [INFO] master - chunk :  {"result":-1,"message":"master is lost"}
[2015-09-15 08:51:21.799] [ERROR] master - register of web server fail.
[2015-09-15 08:51:23.804] [INFO] master - chunk :  {"result":-1,"message":"master is lost"}
[2015-09-15 08:51:23.805] [ERROR] master - register of web server fail.
[2015-09-15 08:51:25.805] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:27.809] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:29.810] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:31.815] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:33.819] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:35.822] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:37.827] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:39.830] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:41.834] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:43.837] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:45.839] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:47.844] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:49.848] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:51.850] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:53.855] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:55.864] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:57.865] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:51:59.868] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:01.870] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:03.875] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:05.877] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:07.880] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:09.885] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:11.888] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:13.893] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:15.896] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:17.901] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:19.905] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:21.909] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:23.912] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:25.916] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:27.919] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:29.920] [ERROR] master - register problem with request: connect ECONNREFUSED
[2015-09-15 08:52:31.969] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:52:31.969] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:52:41.944] [INFO] master - web server status lost 
[2015-09-15 08:52:43.947] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:52:43.948] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:52:45.951] [INFO] master - web server status lost 
[2015-09-15 08:52:47.954] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:52:47.955] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:52:49.957] [INFO] master - web server status lost 
[2015-09-15 08:52:51.961] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:52:51.961] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:52:53.964] [INFO] master - web server status lost 
[2015-09-15 08:52:55.966] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:52:55.967] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:52:57.970] [INFO] master - web server status lost 
[2015-09-15 08:52:59.975] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:52:59.976] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:53:01.974] [INFO] master - web server status lost 
[2015-09-15 08:53:03.978] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:53:03.978] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:53:05.983] [INFO] master - web server status lost 
[2015-09-15 08:53:07.987] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:53:07.987] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:53:09.990] [INFO] master - web server status lost 
[2015-09-15 08:53:11.994] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:53:11.995] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:53:13.997] [INFO] master - web server status lost 
[2015-09-15 08:53:16.000] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:53:16.001] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:53:18.002] [INFO] master - web server status lost 
[2015-09-15 08:53:20.004] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:53:20.004] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:53:22.007] [INFO] master - web server status lost 
[2015-09-15 08:53:24.010] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:53:24.011] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:53:26.013] [INFO] master - web server status lost 
[2015-09-15 08:53:28.017] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:53:28.018] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:53:30.021] [INFO] master - web server status lost 
[2015-09-15 08:53:32.025] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:53:32.026] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:53:34.029] [INFO] master - web server status lost 
[2015-09-15 08:53:36.035] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:53:36.035] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:53:38.037] [INFO] master - web server status lost 
[2015-09-15 08:53:40.039] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:53:40.039] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:53:42.044] [INFO] master - web server status lost 
[2015-09-15 08:53:44.045] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:53:44.046] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:53:46.050] [INFO] master - web server status lost 
[2015-09-15 08:54:25.649] [INFO] master - master start
[2015-09-15 08:54:25.660] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:54:25.660] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:54:25.666] [INFO] master - mongoose connected
[2015-09-15 08:54:25.671] [INFO] master - mongoose connect
[2015-09-15 08:54:35.479] [INFO] master - web server status lost 
[2015-09-15 08:54:37.481] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:54:37.482] [INFO] master - register success. master_id :  undefined
[2015-09-15 08:54:47.496] [INFO] master - web server status lost 
[2015-09-15 08:54:49.500] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 08:54:49.501] [INFO] master - register success. master_id :  undefined
[2015-09-15 09:00:03.471] [INFO] master - master start
[2015-09-15 09:00:03.483] [INFO] master - mongoose connected
[2015-09-15 09:00:03.488] [INFO] master - mongoose connect
[2015-09-15 09:00:03.492] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 09:00:03.492] [INFO] master - register success. master_id :  undefined
[2015-09-15 09:00:05.303] [INFO] master - update success
[2015-09-15 09:00:07.293] [INFO] master - update success
[2015-09-15 09:00:09.295] [INFO] master - update success
[2015-09-15 09:00:11.301] [INFO] master - update success
[2015-09-15 09:00:13.305] [INFO] master - update success
[2015-09-15 09:00:15.306] [INFO] master - update success
[2015-09-15 09:00:17.312] [INFO] master - update success
[2015-09-15 09:00:19.319] [INFO] master - update success
[2015-09-15 09:00:21.317] [INFO] master - update success
[2015-09-15 09:00:23.322] [INFO] master - update success
[2015-09-15 09:00:25.325] [INFO] master - update success
[2015-09-15 09:00:27.330] [INFO] master - update success
[2015-09-15 09:00:29.333] [INFO] master - update success
[2015-09-15 09:00:31.338] [INFO] master - update success
[2015-09-15 09:00:33.342] [INFO] master - update success
[2015-09-15 09:00:35.346] [INFO] master - update success
[2015-09-15 09:00:37.348] [INFO] master - update success
[2015-09-15 09:00:39.351] [INFO] master - update success
[2015-09-15 09:00:41.354] [INFO] master - update success
[2015-09-15 09:00:43.358] [INFO] master - update success
[2015-09-15 09:00:45.368] [INFO] master - update success
[2015-09-15 09:00:47.367] [INFO] master - update success
[2015-09-15 09:00:49.374] [INFO] master - update success
[2015-09-15 09:00:51.375] [INFO] master - update success
[2015-09-15 09:00:53.379] [INFO] master - update success
[2015-09-15 09:00:55.382] [INFO] master - update success
[2015-09-15 09:00:57.382] [INFO] master - update success
[2015-09-15 09:00:59.387] [INFO] master - update success
[2015-09-15 09:01:01.389] [INFO] master - update success
[2015-09-15 09:01:03.392] [INFO] master - update success
[2015-09-15 09:01:05.395] [INFO] master - update success
[2015-09-15 09:01:07.404] [INFO] master - update success
[2015-09-15 09:01:09.405] [INFO] master - update success
[2015-09-15 09:01:11.410] [INFO] master - update success
[2015-09-15 09:01:13.410] [INFO] master - update success
[2015-09-15 09:01:15.413] [INFO] master - update success
[2015-09-15 09:01:17.417] [INFO] master - update success
[2015-09-15 09:01:19.419] [INFO] master - update success
[2015-09-15 09:01:21.423] [INFO] master - update success
[2015-09-15 09:01:23.424] [INFO] master - update success
[2015-09-15 09:01:25.427] [INFO] master - update success
[2015-09-15 09:01:27.430] [INFO] master - update success
[2015-09-15 09:01:29.436] [INFO] master - update success
[2015-09-15 09:01:31.440] [INFO] master - update success
[2015-09-15 09:01:33.442] [INFO] master - update success
[2015-09-15 09:01:35.446] [INFO] master - update success
[2015-09-15 09:01:37.451] [INFO] master - update success
[2015-09-15 09:01:39.453] [INFO] master - update success
[2015-09-15 09:01:41.457] [INFO] master - update success
[2015-09-15 09:01:43.461] [INFO] master - update success
[2015-09-15 09:01:45.463] [INFO] master - update success
[2015-09-15 09:01:47.468] [INFO] master - update success
[2015-09-15 09:01:49.471] [INFO] master - update success
[2015-09-15 09:01:51.476] [INFO] master - update success
[2015-09-15 09:01:53.479] [INFO] master - update success
[2015-09-15 09:01:55.483] [INFO] master - update success
[2015-09-15 09:01:57.490] [INFO] master - update success
[2015-09-15 09:01:59.491] [INFO] master - update success
[2015-09-15 09:02:01.494] [INFO] master - update success
[2015-09-15 09:02:03.498] [INFO] master - update success
[2015-09-15 09:02:05.501] [INFO] master - update success
[2015-09-15 09:02:07.503] [INFO] master - update success
[2015-09-15 09:02:09.509] [INFO] master - update success
[2015-09-15 09:02:11.512] [INFO] master - update success
[2015-09-15 09:02:13.517] [INFO] master - update success
[2015-09-15 09:02:15.518] [INFO] master - update success
[2015-09-15 09:11:22.179] [INFO] master - register url : /front/task method : POST process : function
[2015-09-15 09:11:22.181] [INFO] master - register url : /front/task/info/:task_id method : GET process : function
[2015-09-15 09:11:22.182] [INFO] master - register url : /front/task/list method : GET process : function
[2015-09-15 09:11:22.182] [INFO] master - register url : /front/task/log/:task_id/:log_id method : GET process : function
[2015-09-15 09:11:22.185] [INFO] master - master start
[2015-09-15 09:11:22.192] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 09:11:22.192] [INFO] master - register success. master_id :  undefined
[2015-09-15 09:11:22.198] [INFO] master - mongoose connected
[2015-09-15 09:11:22.202] [INFO] master - mongoose connect
[2015-09-15 09:11:24.001] [INFO] master - update success
[2015-09-15 09:11:25.999] [INFO] master - update success
[2015-09-15 09:11:28.003] [INFO] master - update success
[2015-09-15 09:26:13.523] [INFO] master - register url : /front/task method : POST process : function
[2015-09-15 09:26:13.526] [INFO] master - register url : /front/task/info/:task_id method : GET process : function
[2015-09-15 09:26:13.526] [INFO] master - register url : /front/task/list method : GET process : function
[2015-09-15 09:26:13.526] [INFO] master - register url : /front/task/log/:task_id/:log_id method : GET process : function
[2015-09-15 09:26:13.530] [INFO] master - master start
[2015-09-15 09:26:13.537] [INFO] master - chunk :  {"result":0,"message":"Success"}
[2015-09-15 09:26:13.537] [INFO] master - register success. master_id :  undefined
[2015-09-15 09:26:13.542] [INFO] master - mongoose connected
[2015-09-15 09:26:13.547] [INFO] master - mongoose connect
[2015-09-15 09:26:15.351] [INFO] master - update success
[2015-12-04 14:08:32.638] [INFO] master - dbsUri :  mongodb://172.31.3.193:27017/xwcloudtest
[2015-12-04 14:08:33.841] [INFO] master - register url : /slave/register method : POST process : function
[2015-12-04 14:08:33.842] [INFO] master - register url : /slave/update method : POST process : function
[2015-12-04 14:08:33.843] [INFO] master - register url : /master/task method : POST process : function
[2015-12-04 14:08:33.843] [INFO] master - register url : /slave/task/report method : POST process : function
[2015-12-04 14:08:33.844] [INFO] master - register url : /slave/task/result method : POST process : function
[2015-12-04 14:08:33.844] [INFO] master - register url : /UE/Online method : POST process : function
[2015-12-04 14:08:33.845] [INFO] master - register url : /UE/Offline method : POST process : function
[2015-12-04 14:08:33.845] [INFO] master - register url : /UE/BandWitdth method : POST process : function
[2015-12-04 14:08:41.356] [INFO] master - register success. id :  1
[2015-12-04 14:08:41.358] [INFO] master - register success. id :  1
[2015-12-04 14:08:41.709] [INFO] master - mongoose connected
[2015-12-04 14:08:41.723] [INFO] master - mongoose connect
[2015-12-04 14:08:41.752] [ERROR] master - save resource error. { [MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:262:22)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:41.775] [ERROR] master - save resource error. { [MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:297:20)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:41.783] [INFO] master - ResourceModel.ensureIndexes success.
[2015-12-04 14:08:41.786] [INFO] master - task index =  186
[2015-12-04 14:08:41.787] [ERROR] master - save TaskCase error. { [MongoError: E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:262:22)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:41.795] [ERROR] master - save Test Group error. { [MongoError: E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:297:20)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:41.804] [INFO] master - ComponentModel.ensureIndexes success.
[2015-12-04 14:08:41.805] [INFO] master - TestCaseModel.ensureIndexes success.
[2015-12-04 14:08:41.807] [INFO] master - TestGroupModel.ensureIndexes success.
[2015-12-04 14:08:41.809] [INFO] master - KeyWordModel.ensureIndexes success.
[2015-12-04 14:08:53.418] [INFO] master - dbsUri :  mongodb://172.31.3.193:27017/xwcloudtest
[2015-12-04 14:08:53.418] [INFO] master - dbsUri :  mongodb://172.31.3.193:27017/xwcloudtest
[2015-12-04 14:08:57.278] [INFO] master - A worker is now connected to null:3000
[2015-12-04 14:08:57.202] [INFO] master - register url : /slave/register method : POST process : function
[2015-12-04 14:08:57.293] [INFO] master - A worker is now connected to null:3000
[2015-12-04 14:08:57.201] [INFO] master - register url : /slave/register method : POST process : function
[2015-12-04 14:08:53.417] [INFO] master - dbsUri :  mongodb://172.31.3.193:27017/xwcloudtest
[2015-12-04 14:08:57.314] [INFO] master - A worker is now connected to null:3000
[2015-12-04 14:08:57.204] [INFO] master - register url : /slave/update method : POST process : function
[2015-12-04 14:08:57.212] [INFO] master - register url : /slave/register method : POST process : function
[2015-12-04 14:08:57.204] [INFO] master - register url : /slave/update method : POST process : function
[2015-12-04 14:08:57.205] [INFO] master - register url : /master/task method : POST process : function
[2015-12-04 14:08:57.228] [INFO] master - register url : /slave/update method : POST process : function
[2015-12-04 14:08:57.206] [INFO] master - register url : /master/task method : POST process : function
[2015-12-04 14:08:57.207] [INFO] master - register url : /slave/task/report method : POST process : function
[2015-12-04 14:08:57.209] [INFO] master - register url : /slave/task/result method : POST process : function
[2015-12-04 14:08:57.210] [INFO] master - register url : /UE/Online method : POST process : function
[2015-12-04 14:08:57.210] [INFO] master - register url : /UE/Offline method : POST process : function
[2015-12-04 14:08:57.212] [INFO] master - register url : /UE/BandWitdth method : POST process : function
[2015-12-04 14:08:57.278] [INFO] master - master start
[2015-12-04 14:08:57.290] [INFO] master - register success. id :  1
[2015-12-04 14:08:57.298] [INFO] master - register success. id :  1
[2015-12-04 14:08:57.305] [INFO] master - mongoose connected
[2015-12-04 14:08:57.324] [INFO] master - mongoose connect
[2015-12-04 14:08:57.332] [ERROR] master - save resource error. { [MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:297:20)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:57.342] [ERROR] master - save Test Group error. { [MongoError: E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:262:22)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:57.353] [ERROR] master - save resource error. { [MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:297:20)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:57.369] [INFO] master - task index =  186
[2015-12-04 14:08:57.372] [ERROR] master - save TaskCase error. { [MongoError: E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:297:20)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:57.388] [INFO] master - ResourceModel.ensureIndexes success.
[2015-12-04 14:08:57.396] [INFO] master - TestGroupModel.ensureIndexes success.
[2015-12-04 14:08:57.209] [INFO] master - register url : /slave/task/report method : POST process : function
[2015-12-04 14:08:57.398] [INFO] master - ComponentModel.ensureIndexes success.
[2015-12-04 14:08:57.401] [INFO] master - KeyWordModel.ensureIndexes success.
[2015-12-04 14:08:57.408] [INFO] master - TestCaseModel.ensureIndexes success.
[2015-12-04 14:08:57.214] [INFO] master - register url : /slave/task/result method : POST process : function
[2015-12-04 14:08:57.226] [INFO] master - register url : /UE/Online method : POST process : function
[2015-12-04 14:08:57.244] [INFO] master - register url : /UE/Offline method : POST process : function
[2015-12-04 14:08:57.245] [INFO] master - register url : /UE/BandWitdth method : POST process : function
[2015-12-04 14:08:57.282] [INFO] master - master start
[2015-12-04 14:08:57.305] [INFO] master - register success. id :  1
[2015-12-04 14:08:57.313] [INFO] master - register success. id :  1
[2015-12-04 14:08:57.319] [INFO] master - mongoose connected
[2015-12-04 14:08:57.337] [INFO] master - mongoose connect
[2015-12-04 14:08:57.347] [ERROR] master - save TaskCase error. { [MongoError: E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:262:22)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:57.363] [ERROR] master - save resource error. { [MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:297:20)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:57.372] [ERROR] master - save Test Group error. { [MongoError: E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:262:22)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:57.380] [ERROR] master - save resource error. { [MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:297:20)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:57.394] [INFO] master - task index =  186
[2015-12-04 14:08:57.397] [INFO] master - ResourceModel.ensureIndexes success.
[2015-12-04 14:08:57.404] [INFO] master - TestGroupModel.ensureIndexes success.
[2015-12-04 14:08:57.409] [INFO] master - ComponentModel.ensureIndexes success.
[2015-12-04 14:08:57.412] [INFO] master - KeyWordModel.ensureIndexes success.
[2015-12-04 14:08:57.414] [INFO] master - TestCaseModel.ensureIndexes success.
[2015-12-04 14:08:57.229] [INFO] master - register url : /master/task method : POST process : function
[2015-12-04 14:08:57.230] [INFO] master - register url : /slave/task/report method : POST process : function
[2015-12-04 14:08:57.231] [INFO] master - register url : /slave/task/result method : POST process : function
[2015-12-04 14:08:57.233] [INFO] master - register url : /UE/Online method : POST process : function
[2015-12-04 14:08:57.233] [INFO] master - register url : /UE/Offline method : POST process : function
[2015-12-04 14:08:57.235] [INFO] master - register url : /UE/BandWitdth method : POST process : function
[2015-12-04 14:08:57.312] [INFO] master - master start
[2015-12-04 14:08:57.335] [INFO] master - register success. id :  1
[2015-12-04 14:08:57.345] [INFO] master - register success. id :  1
[2015-12-04 14:08:57.357] [INFO] master - mongoose connected
[2015-12-04 14:08:57.385] [INFO] master - mongoose connect
[2015-12-04 14:08:57.394] [ERROR] master - save TaskCase error. { [MongoError: E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:262:22)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:57.412] [ERROR] master - save resource error. { [MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:297:20)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:57.421] [ERROR] master - save Test Group error. { [MongoError: E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:262:22)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:57.427] [ERROR] master - save resource error. { [MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:297:20)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:57.435] [INFO] master - task index =  186
[2015-12-04 14:08:57.438] [INFO] master - ResourceModel.ensureIndexes success.
[2015-12-04 14:08:57.441] [INFO] master - TestGroupModel.ensureIndexes success.
[2015-12-04 14:08:57.443] [INFO] master - ComponentModel.ensureIndexes success.
[2015-12-04 14:08:57.444] [INFO] master - KeyWordModel.ensureIndexes success.
[2015-12-04 14:08:57.445] [INFO] master - TestCaseModel.ensureIndexes success.
[2015-12-04 14:08:56.006] [INFO] master - dbsUri :  mongodb://172.31.3.193:27017/xwcloudtest
[2015-12-04 14:08:58.431] [INFO] master - A worker is now connected to null:3000
[2015-12-04 14:08:58.391] [INFO] master - register url : /slave/register method : POST process : function
[2015-12-04 14:08:58.393] [INFO] master - register url : /slave/update method : POST process : function
[2015-12-04 14:08:58.394] [INFO] master - register url : /master/task method : POST process : function
[2015-12-04 14:08:58.395] [INFO] master - register url : /slave/task/report method : POST process : function
[2015-12-04 14:08:58.396] [INFO] master - register url : /slave/task/result method : POST process : function
[2015-12-04 14:08:58.397] [INFO] master - register url : /UE/Online method : POST process : function
[2015-12-04 14:08:58.398] [INFO] master - register url : /UE/Offline method : POST process : function
[2015-12-04 14:08:58.399] [INFO] master - register url : /UE/BandWitdth method : POST process : function
[2015-12-04 14:08:58.431] [INFO] master - master start
[2015-12-04 14:08:58.442] [INFO] master - register success. id :  1
[2015-12-04 14:08:58.447] [INFO] master - register success. id :  1
[2015-12-04 14:08:58.451] [INFO] master - mongoose connected
[2015-12-04 14:08:58.465] [INFO] master - mongoose connect
[2015-12-04 14:08:58.469] [ERROR] master - save TaskCase error. { [MongoError: E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:262:22)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:58.479] [ERROR] master - save resource error. { [MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:297:20)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:58.487] [ERROR] master - save Test Group error. { [MongoError: E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:262:22)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:58.494] [ERROR] master - save resource error. { [MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:297:20)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:58.502] [INFO] master - task index =  186
[2015-12-04 14:08:58.505] [INFO] master - ResourceModel.ensureIndexes success.
[2015-12-04 14:08:58.508] [INFO] master - TestGroupModel.ensureIndexes success.
[2015-12-04 14:08:58.510] [INFO] master - ComponentModel.ensureIndexes success.
[2015-12-04 14:08:58.512] [INFO] master - KeyWordModel.ensureIndexes success.
[2015-12-04 14:08:58.513] [INFO] master - TestCaseModel.ensureIndexes success.
[2015-12-04 14:08:57.321] [INFO] master - dbsUri :  mongodb://172.31.3.193:27017/xwcloudtest
[2015-12-04 14:08:58.738] [INFO] master - A worker is now connected to null:3000
[2015-12-04 14:08:58.698] [INFO] master - register url : /slave/register method : POST process : function
[2015-12-04 14:08:58.701] [INFO] master - register url : /slave/update method : POST process : function
[2015-12-04 14:08:58.701] [INFO] master - register url : /master/task method : POST process : function
[2015-12-04 14:08:58.702] [INFO] master - register url : /slave/task/report method : POST process : function
[2015-12-04 14:08:58.703] [INFO] master - register url : /slave/task/result method : POST process : function
[2015-12-04 14:08:58.704] [INFO] master - register url : /UE/Online method : POST process : function
[2015-12-04 14:08:58.704] [INFO] master - register url : /UE/Offline method : POST process : function
[2015-12-04 14:08:58.705] [INFO] master - register url : /UE/BandWitdth method : POST process : function
[2015-12-04 14:08:58.736] [INFO] master - master start
[2015-12-04 14:08:58.747] [INFO] master - register success. id :  1
[2015-12-04 14:08:58.754] [INFO] master - mongoose connected
[2015-12-04 14:08:58.766] [INFO] master - mongoose connect
[2015-12-04 14:08:58.774] [ERROR] master - save resource error. { [MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:262:22)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:58.783] [ERROR] master - save Test Group error. { [MongoError: E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.testgroups.$id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:262:22)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:58.789] [ERROR] master - save resource error. { [MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.resources.$major_id_1 dup key: { : 2 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:297:20)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:58.797] [ERROR] master - save TaskCase error. { [MongoError: E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }]
  name: 'MongoError',
  message: 'E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }',
  driver: true,
  code: 11000,
  index: 0,
  errmsg: 'E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }',
  getOperation: [Function],
  toJSON: [Function],
  toString: [Function] }
MongoError: E11000 duplicate key error index: xwcloudtest.testcases.$id_1 dup key: { : 1 }
    at Function.MongoError.create (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\error.js:31:11)
    at toError (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\utils.js:113:22)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\collection.js:547:23
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:457:9
    at resultHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\lib\bulk\unordered.js:409:5)
    at D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:756:13
    at Callbacks.emit (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:95:3)
    at null.messageHandler (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\topologies\server.js:243:23)
    at Socket.<anonymous> (D:\Project\CloudTest\code\xwcloudtest\node_modules\mongoose\node_modules\mongodb\node_modules\mongodb-core\lib\connection\connection.js:297:20)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
[2015-12-04 14:08:58.805] [INFO] master - task index =  186
[2015-12-04 14:08:58.807] [INFO] master - ResourceModel.ensureIndexes success.
[2015-12-04 14:08:58.810] [INFO] master - TestGroupModel.ensureIndexes success.
[2015-12-04 14:08:58.812] [INFO] master - ComponentModel.ensureIndexes success.
[2015-12-04 14:08:58.813] [INFO] master - KeyWordModel.ensureIndexes success.
[2015-12-04 14:08:58.815] [INFO] master - TestCaseModel.ensureIndexes success.
